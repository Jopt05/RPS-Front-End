{"version":3,"sources":["components/NavBar.js","assets/bg-triangle.svg","assets/icon-rock.svg","assets/icon-paper.svg","assets/icon-scissors.svg","helpers/getItem.js","pages/GameScreen.js","assets/Loading.svg","pages/LoginScreen.js","pages/RegisterScreen.js","components/Scoreboard.js","pages/ScoreScreen.js","routers/PrivateRoute.js","AppRouter.js","App.js","index.js"],"names":["NavBar","useContext","UserContext","UserInfo","setUserInfo","className","activeClassName","to","user","score","getItem","election","GameScreen","history","useState","IsPlaying","setIsPlaying","PlayAgain","setPlayAgain","userElection","aiElection","Election","setElection","Win","setWin","userItem","aiItem","Item","setItem","itemsSVG","rock","paper","scissors","startGame","e","player","pc","target","tagName","children","getAttribute","Math","floor","random","setTimeout","useEffect","fetch","uid","method","headers","tokenId","body","JSON","stringify","then","data","json","catch","console","log","src","Background","onClick","name","LoginScreen","Form","setForm","msg","hasError","Error","setError","isLoading","setisLoading","handleSubmit","a","preventDefault","User","Password","password","resp","err","userData","usuario","isLogged","replace","handleChange","value","document","getElementsByName","focus","onSubmit","onChange","type","Loading","alt","exact","RegisterScreen","id","errors","goBack","Scoreboard","Data","setData","usuarios","sort","b","length","pop","users","fetchScores","map","item","ScoreScreen","PrivateRoute","isAuthenticated","Component","component","rest","props","AppRouter","path","createContext","App","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.41af409a.chunk.js","sourcesContent":["import React, { useContext } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { UserContext } from '../App'\r\nimport '../styles/NavBar.css'\r\n\r\nconst NavBar = () => {\r\n\r\n    const { UserInfo, setUserInfo } = useContext( UserContext )\r\n\r\n    return (\r\n        <>\r\n            <div className=\"Game\">\r\n                <header className=\"Game__Header\">\r\n                    <div className=\"Game__Header-Container\">\r\n                        <div className=\"Game__Header-Container-TitleC\">\r\n                            <p className=\"Game__Header-Container-TitleC-Title\">\r\n                                Rock<br/>\r\n                                Papper<br/>\r\n                                Scissors\r\n                            </p>\r\n                        </div>\r\n                        <nav className=\"GameNav\">\r\n                            <NavLink activeClassName=\"GameNav__Link-A\" className=\"GameNav__Link\" to=\"/game\">Play</NavLink>\r\n                            <NavLink activeClassName=\"GameNav__Link-A\" className=\"GameNav__Link\" to=\"/score\">Scoreboard</NavLink>\r\n                        </nav>\r\n                        <div className=\"Game__Header-Container-ScoreC\">\r\n                            <div className=\"Game__Header-Container-ScoreCC\">\r\n                                <span className=\"Game__Header-Container-ScoreCC-Score\">\r\n                                    SCORE\r\n                                </span>\r\n                                <span className=\"Game__Header-Container-ScoreCC-ScoreP\">\r\n                                    {\r\n                                        UserInfo?.user?.score\r\n                                    }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","export default __webpack_public_path__ + \"static/media/bg-triangle.c0c30b56.svg\";","export default __webpack_public_path__ + \"static/media/icon-rock.476e90a9.svg\";","export default __webpack_public_path__ + \"static/media/icon-paper.8b57a6b1.svg\";","export default __webpack_public_path__ + \"static/media/icon-scissors.3b1a5d7e.svg\";","export const getItem = ( election ) => {\r\n\r\n        switch (election) {\r\n            case 'Rock':\r\n                return 0\r\n                break;\r\n\r\n            case 'Paper':\r\n                return 1\r\n                break;\r\n\r\n            case 'Scissors':\r\n                return 2\r\n                break;\r\n\r\n            case 0:\r\n                return 'Rock'\r\n                break;\r\n\r\n            case 1:\r\n                return 'Paper'\r\n                break;\r\n\r\n            case 2:\r\n                return 'Scissors'\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n\r\n    }","import React, { useContext, useEffect, useState } from 'react'\r\nimport NavBar from '../components/NavBar'\r\nimport '../styles/Game.css'\r\nimport Background from '../assets/bg-triangle.svg'\r\nimport rock from '../assets/icon-rock.svg'\r\nimport paper from '../assets/icon-paper.svg'\r\nimport scissors from '../assets/icon-scissors.svg'\r\nimport { UserContext } from '../App'\r\nimport { getItem } from '../helpers/getItem'\r\nimport {\r\n    // BrowserRouter as Router,\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from 'react-router-dom';\r\n\r\nconst GameScreen = ({ history }) => {\r\n\r\n    const { UserInfo, setUserInfo } = useContext( UserContext );\r\n\r\n    const { user } = UserInfo;\r\n\r\n    const { score } = user;\r\n\r\n    const [IsPlaying, setIsPlaying] = useState(false);\r\n    const [PlayAgain, setPlayAgain] = useState(false);\r\n    const [Election, setElection] = useState({\r\n        userElection: null,\r\n        aiElection: null,\r\n    });\r\n    const [Win, setWin] = useState('');\r\n    const [Item, setItem] = useState({\r\n        userItem: null,\r\n        aiItem: null\r\n    })\r\n\r\n    const itemsSVG = [\r\n        rock,\r\n        paper,\r\n        scissors\r\n    ];\r\n\r\n    const winner = (player, pc) => {\r\n        let isWinner = '';\r\n\r\n        if( player === pc ){\r\n            isWinner = 'SAME'\r\n        } else if ( (player === 0 && pc === 2) || (player === 2 && pc === 1) || (player === 1 && pc === 0) ) {\r\n            isWinner = 'YOU WIN'\r\n        } else {\r\n            isWinner = 'YOU LOSE' \r\n        }\r\n\r\n        setWin(isWinner)\r\n\r\n        setTimeout(() => {\r\n            setPlayAgain( true );\r\n        }, 500);\r\n    }    \r\n\r\n    const startGame = ( e ) => {\r\n        setIsPlaying( true );\r\n\r\n        let election = e.target,\r\n            aiElection;\r\n\r\n        while( election.tagName != 'IMG' ){\r\n            election = election.children[0]\r\n        };\r\n\r\n        election = election.getAttribute('name');\r\n        \r\n        aiElection = Math.floor(Math.random() * (3 - 0)) + 0;\r\n\r\n        aiElection = getItem( aiElection );\r\n\r\n        setElection({\r\n            ...Election,\r\n            aiElection: aiElection,\r\n            userElection: election,\r\n        });\r\n\r\n        election = getItem( election );\r\n\r\n        aiElection = getItem( aiElection );\r\n\r\n        setItem({\r\n            ...Item,\r\n            userItem: itemsSVG[election],\r\n            aiItem: itemsSVG[aiElection]\r\n        });\r\n\r\n        winner(election, aiElection);\r\n    }\r\n\r\n    const handlePlayAgain = () => {\r\n        setIsPlaying( false );\r\n        setPlayAgain( false );\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (Win != 'YOU WIN') return;\r\n\r\n        fetch(`https://rpsbackendjopt.herokuapp.com/api/usuarios/${ user.uid }`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-token' : UserInfo?.tokenId\r\n            },\r\n            body: JSON.stringify({\r\n                score: UserInfo.user.score + 1\r\n            }),\r\n        })\r\n        .then( data => data.json() )\r\n        .catch( data => console.log(\"Error en la peticion\"))\r\n        \r\n        setTimeout(() => {\r\n            setUserInfo({\r\n                ...UserInfo,\r\n                user: {\r\n                    ...user,\r\n                    score: score + 1\r\n                }\r\n            })\r\n        }, 1500);\r\n    }, [Win])\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <div className={`RPSContainer ${ IsPlaying ? 'Full' : '' }`}>\r\n                <img className={`RPSContainer__Bg ${ IsPlaying ? 'Hide' : '' }`} src={ Background } />\r\n                <div className={`ItemContainer Rock ${ IsPlaying ? 'Hide' : '' }`} onClick={ startGame }>\r\n                    <div className=\"ItemBorder\">\r\n                        <div className=\"ItemInnerShadow\">\r\n                            <div className=\"ItemInnerContainer\">\r\n                                <img name=\"Rock\" className=\"Item-Svg\" src={rock} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`ItemContainer Paper ${ IsPlaying ? 'Hide' : '' }`} onClick={ startGame }>\r\n                    <div className=\"ItemBorder\">\r\n                        <div className=\"ItemInnerShadow\">\r\n                            <div className=\"ItemInnerContainer\">\r\n                                <img name=\"Paper\" className=\"Item-Svg\" src={paper} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`ItemContainer Scissors ${ IsPlaying ? 'Hide' : '' }`} onClick={ startGame }>\r\n                    <div className=\"ItemBorder\">\r\n                        <div className=\"ItemInnerShadow\">\r\n                            <div className=\"ItemInnerContainer\">\r\n                                <img name=\"Scissors\" className=\"Item-Svg\" src={scissors} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`GameContainer ${ IsPlaying ? '' : 'Hide' }`}>\r\n                    <div className=\"Option\">\r\n                        <p className=\"OptionTitle\">\r\n                            YOU PICKED\r\n                        </p>\r\n                        <div className={ `ItemContainerG ${ Election.userElection }` }>\r\n                            <div className=\"ItemBorder\">\r\n                                <div className=\"ItemInnerShadow\">\r\n                                    <div className=\"ItemInnerContainer\">\r\n                                        <img  className=\"Item-Svg\" src={ Item.userItem } />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`Option ${ PlayAgain ? '' : 'NoShow' }`}>\r\n                        <div className=\"Versus\">\r\n                            <p className=\"OptionTitle\">\r\n                                {\r\n                                    Win\r\n                                }\r\n                            </p>\r\n                            {\r\n                                Win != 'YOU WIN' && (\r\n                                    <button className=\"ButtonAgain\" onClick={ handlePlayAgain }>\r\n                                        PLAY AGAIN\r\n                                    </button>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Option\">\r\n                        <p className=\"OptionTitle\">\r\n                            THE HOUSE PICKED\r\n                        </p>\r\n                        <div className={ `ItemContainerG ${ Election.aiElection }` }>\r\n                            <div className=\"ItemBorder\">\r\n                                <div className=\"ItemInnerShadow\">\r\n                                    <div className=\"ItemInnerContainer\">\r\n                                        <img className=\"Item-Svg\" src={ Item.aiItem } />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GameScreen\r\n","export default __webpack_public_path__ + \"static/media/Loading.0fcc14e1.svg\";","import React, { useContext, useEffect, useState } from 'react'\r\nimport '../styles/login.css'\r\nimport { Link, NavLink, Redirect } from 'react-router-dom'\r\nimport { UserContext } from '../App'\r\nimport Loading from '../assets/Loading.svg';\r\n\r\nconst LoginScreen = ({ history }) => {\r\n\r\n    const { UserInfo, setUserInfo } = useContext( UserContext )\r\n\r\n    const [Form, setForm] = useState({})\r\n    const [Error, setError] = useState({\r\n        msg: '',\r\n        hasError: false,\r\n    });\r\n    const [isLoading, setisLoading] = useState(false);\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n\r\n        setisLoading(true);\r\n        \r\n        if( !Form.User || !Form.Password ) {\r\n            setUserInfo({ ...UserInfo, msg: 'You cannot leave fields empty' });\r\n            return;\r\n        }\r\n\r\n        const userData = await fetch('https://rpsbackendjopt.herokuapp.com/api/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                user: Form.User,\r\n                password: Form.Password,\r\n            }),\r\n        })\r\n        .then( resp => resp.json() )\r\n        .catch( err => console.log( err ) );\r\n\r\n        if( userData.msg ) {\r\n            setError({\r\n                ...Error,\r\n                msg: userData.msg,\r\n                hasError: true,\r\n            })\r\n            setisLoading(false);\r\n            return;\r\n        }\r\n\r\n        setError({\r\n            ...Error,\r\n            msg: '',\r\n            hasError: false,\r\n        })\r\n        \r\n        setUserInfo({ \r\n            ...UserInfo, \r\n            tokenId: userData?.tokenId, \r\n            user: userData?.usuario,\r\n            isLogged: true,\r\n        }) \r\n\r\n        setisLoading(false);\r\n\r\n        history.replace('/game');\r\n\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setForm({\r\n            ...Form,\r\n            [ e.target.name ] : e.target.value\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.getElementsByName('User')[0].focus();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"MainBody\">\r\n            <div className=\"MainBody__Container\">\r\n                <form onSubmit={ handleSubmit } className=\"MainBody__Container-Form\">\r\n                    <p className=\"MainBody__Container-Form-Title\">\r\n                        Login\r\n                    </p>\r\n                    <label className=\"MainBody__Container-Form-Label\">\r\n                        User:\r\n                    </label>\r\n                    <input \r\n                        name=\"User\" \r\n                        className=\"MainBody__Container-Form-Input\"\r\n                        onChange={ handleChange }\r\n                    />\r\n                    <label className=\"MainBody__Container-Form-Label\">\r\n                        Password:\r\n                    </label>\r\n                    <input \r\n                        name=\"Password\" \r\n                        type=\"password\"\r\n                        className=\"MainBody__Container-Form-Input\"\r\n                        onChange={ handleChange }\r\n                    />\r\n                    <p className={ `MainBody__Container-Form-Message${ Error.hasError ? '-Error' : '' }` }>\r\n                        { Error?.msg }\r\n                    </p>\r\n                    <button className=\"MainBody__Container-Form-Button\">\r\n                        {\r\n                            isLoading\r\n                                ? <img className=\"LoadingSvg\" src={ Loading } alt=\"Loading\" />\r\n                                : 'Login'\r\n                        }\r\n                    </button>\r\n                    <nav className=\"MainBody__LinksDiv\">\r\n                        <NavLink exact className=\"MainBody__LinksDiv-Link\" to=\"/register\">You don't have an account? Register here!</NavLink>\r\n                    </nav>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState } from 'react'\r\nimport '../styles/login.css'\r\nimport { Link, NavLink, Redirect } from 'react-router-dom'\r\nimport Loading from '../assets/Loading.svg';\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n\r\n    const [Form, setForm] = useState({})\r\n\r\n    const [UserInfo, setUserInfo] = useState({\r\n        msg: '',\r\n        id: '',\r\n        hasError: false,\r\n    })\r\n\r\n    const [isLoading, setisLoading] = useState(false);\r\n\r\n    const handleChange = (e) => {\r\n        setForm({\r\n            ...Form,\r\n            [ e.target.name ] : e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n\r\n        setisLoading(true);\r\n        \r\n        if( !Form.User || !Form.Password ) {\r\n            setUserInfo({ ...UserInfo, msg: 'You cannot leave fields empty' });\r\n            return;\r\n        }\r\n\r\n        const userData = await fetch('https://rpsbackendjopt.herokuapp.com/api/usuarios', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                user: Form.User,\r\n                password: Form.Password,\r\n                score: 0\r\n            }),\r\n        })\r\n            .then( resp => resp.json() )\r\n            // .then( data => setUserInfo({ ...UserInfo, msg: data.msg }) )\r\n            // .catch( err => console.log(err) )\r\n\r\n        if( userData.errors ) {\r\n            setUserInfo({ \r\n                ...UserInfo,\r\n                msg: userData.errors[0].msg\r\n            });\r\n            return;\r\n        }\r\n\r\n        setUserInfo({ \r\n            ...UserInfo,\r\n            msg: userData?.msg\r\n        });\r\n\r\n        setTimeout(() => {\r\n            setisLoading(false);\r\n            history.goBack();\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"MainBody\">\r\n            <div className=\"MainBody__Container\">\r\n                <form onSubmit={handleSubmit} className=\"MainBody__Container-Form\">\r\n                    <p className=\"MainBody__Container-Form-Title\">\r\n                        Register\r\n                    </p>\r\n                    <label className=\"MainBody__Container-Form-Label\">\r\n                        User:\r\n                    </label>\r\n                    <input \r\n                        name=\"User\" \r\n                        className=\"MainBody__Container-Form-Input\"\r\n                        onChange={ handleChange }\r\n                    />\r\n                    <label className=\"MainBody__Container-Form-Label\">\r\n                        Password:\r\n                    </label>\r\n                    <input \r\n                        type=\"password\"\r\n                        name=\"Password\" \r\n                        className=\"MainBody__Container-Form-Input\"\r\n                        onChange={ handleChange }\r\n                    />\r\n                    <p className={ `MainBody__Container-Form-Message${ UserInfo.hasError ? '-Error' : '' }` }>\r\n                        { UserInfo.msg }\r\n                    </p>\r\n                    <button className=\"MainBody__Container-Form-Button\">\r\n                        {\r\n                            isLoading\r\n                                ? <img className=\"LoadingSvg\" src={ Loading } alt=\"Loading\" />\r\n                                : 'Register'\r\n                        }\r\n                    </button>\r\n                    <nav className=\"MainBody__LinksDiv\">\r\n                        <NavLink exact className=\"MainBody__LinksDiv-Link\" to=\"/login\">You have an account? Login here!</NavLink>\r\n                    </nav>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import { useEffect, useState } from \"react\"\r\nimport ScoreRow from './Scoreboard';\r\n\r\nconst Scoreboard = () => {\r\n\r\n    const [Data, setData] = useState(null)\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchScores = async() => {\r\n            const data = await fetch('https://rpsbackendjopt.herokuapp.com/api/usuarios', {\r\n                method: 'GET'\r\n            })\r\n            .then( data => data.json() )\r\n            .then( data => data.usuarios );\r\n\r\n            data.sort( function(a, b){return b.score - a.score} )\r\n\r\n            while( data.length > 5 ) {\r\n                data.pop()\r\n            }\r\n\r\n            setData({\r\n                ...Data,\r\n                users: data\r\n            })\r\n        }\r\n\r\n        fetchScores();\r\n        \r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"Container\">\r\n            <div className=\"Container__Div\">\r\n                <div className=\"Container__Row\">\r\n                <p className=\"Username\">\r\n                    NICKNAME\r\n                </p>\r\n                <p className=\"Score\">\r\n                    SCORE\r\n                </p>\r\n                </div>\r\n                {\r\n                    Data?.users.map( ( item ) => (\r\n                        <div className=\"Container__Row\">\r\n                            <p className=\"Username\">\r\n                                { item.user }\r\n                            </p>\r\n                            <p className=\"Score\">\r\n                                { item.score }\r\n                            </p>\r\n                        </div>\r\n                    ) )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scoreboard\r\n","import React from 'react'\r\nimport NavBar from '../components/NavBar'\r\nimport Scoreboard from '../components/Scoreboard'\r\nimport '../styles/Score.css'\r\n\r\nconst ScoreScreen = () => {\r\n    return (\r\n        <>\r\n          <NavBar />  \r\n          <Scoreboard />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ScoreScreen\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route \r\n            { ...rest }\r\n            component={ ( props ) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n","import React, { createContext, useContext } from 'react';\r\nimport {\r\n    // BrowserRouter as Router,\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport { UserContext } from './App';\r\nimport GameScreen from './pages/GameScreen';\r\nimport LoginScreen from './pages/LoginScreen';\r\nimport RegisterScreen from './pages/RegisterScreen';\r\nimport ScoreScreen from './pages/ScoreScreen';\r\nimport { PrivateRoute } from './routers/PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const { UserInfo, setUserInfo } = useContext( UserContext );\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <Switch>\r\n                    <Route exact path=\"/login\" component={ LoginScreen } />\r\n                    <Route exact path=\"/register\" component={ RegisterScreen } />\r\n                    <PrivateRoute isAuthenticated={ UserInfo.isLogged } exact path=\"/game\" component={ GameScreen } />\r\n                    <PrivateRoute isAuthenticated={ UserInfo.isLogged } exact path=\"/score\" component={ ScoreScreen } />\r\n                    <Redirect to=\"/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import { createContext, useState } from 'react';\r\nimport './App.css';\r\nimport AppRouter from './AppRouter';\r\n\r\nexport const UserContext = createContext(null);\r\n\r\nfunction App() {\r\n\r\n  const [UserInfo, setUserInfo] = useState({\r\n    tokenId: '',\r\n    user: {},\r\n    isLogged: false\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <UserContext.Provider value={{\r\n        UserInfo,\r\n        setUserInfo\r\n      }}>\r\n        <AppRouter />\r\n      </UserContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}